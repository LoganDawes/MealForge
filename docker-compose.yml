services:
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - api_gateway
    networks:
      - backend_network
  
  api_gateway:
    build: ./services/api_gateway
    container_name: api-gateway
    env_file:
      - ./services/api_gateway/.env
    ports:
      - "8000:8000"
    networks:
      - backend_network

  auth_service:
    build: ./services/auth_service
    container_name: auth-service
    env_file:
      - ./services/auth_service/.env
    ports:
      - "8001:8000"
    depends_on:
      - api_gateway
    environment:
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
      - DATABASE_NAME=${DB_NAME}
      - DATABASE_USER=${DB_USER}
      - DATABASE_PASSWORD=${DB_PASSWORD}
    networks:
      - backend_network

  user_service:
    build: ./services/user_service
    container_name: user-service
    env_file:
      - ./services/user_service/.env
    ports:
      - "8002:8000"
    depends_on:
      - api_gateway
    environment:
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
      - DATABASE_NAME=${DB_NAME}
      - DATABASE_USER=${DB_USER}
      - DATABASE_PASSWORD=${DB_PASSWORD}
    networks:
      - backend_network

  search_service:
    build: ./services/search_service
    container_name: search-service
    env_file:
      - ./services/search_service/.env
    ports:
      - "8003:8000"
    depends_on:
      - api_gateway
    networks:
      - backend_network

  integration_service:
    build: ./services/integration_service
    container_name: integration-service
    env_file:
      - ./services/integration_service/.env
    ports:
      - "8004:8000"
    depends_on:
      - api_gateway
      - redis
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    networks:
      - backend_network

  logging_service:
    build: ./services/logging_service
    container_name: logging-service
    env_file:
      - ./services/logging_service/.env
    ports:
      - "8005:8000"
    depends_on:
      - api_gateway
    environment:
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
      - DATABASE_NAME=${DB_NAME}
      - DATABASE_USER=${DB_USER}
      - DATABASE_PASSWORD=${DB_PASSWORD}
    networks:
      - backend_network

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - backend_network

  celery_worker:
    build: ./services/user_service
    container_name: celery-worker
    command: celery -A celery_config worker --loglevel=info
    depends_on:
      - user_service
      - redis
    networks:
      - backend_network

  celery_beat:
    build: ./services/user_service
    container_name: celery-beat
    command: celery -A celery_config beat --loglevel=info
    depends_on:
      - user_service
      - redis
    networks:
      - backend_network

volumes:
  mysql_data:

networks:
  backend_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.25.0.0/16"
